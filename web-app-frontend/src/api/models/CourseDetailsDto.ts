/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    ActivityDetailsDto,
    ActivityDetailsDtoFromJSON,
    ActivityDetailsDtoFromJSONTyped,
    ActivityDetailsDtoToJSON,
} from './ActivityDetailsDto';
import {
    ParticipantDetailsDto,
    ParticipantDetailsDtoFromJSON,
    ParticipantDetailsDtoFromJSONTyped,
    ParticipantDetailsDtoToJSON,
} from './ParticipantDetailsDto';
import {
    UserDetailsDto,
    UserDetailsDtoFromJSON,
    UserDetailsDtoFromJSONTyped,
    UserDetailsDtoToJSON,
} from './UserDetailsDto';

/**
 * 
 * @export
 * @interface CourseDetailsDto
 */
export interface CourseDetailsDto {
    /**
     * 
     * @type {number}
     * @memberof CourseDetailsDto
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof CourseDetailsDto
     */
    name: string;
    /**
     * 
     * @type {UserDetailsDto}
     * @memberof CourseDetailsDto
     */
    teacher: UserDetailsDto;
    /**
     * 
     * @type {Date}
     * @memberof CourseDetailsDto
     */
    lastActivityTime: Date;
    /**
     * 
     * @type {string}
     * @memberof CourseDetailsDto
     */
    subject: string;
    /**
     * 
     * @type {string}
     * @memberof CourseDetailsDto
     */
    description: string;
    /**
     * 
     * @type {Array<ParticipantDetailsDto>}
     * @memberof CourseDetailsDto
     */
    students: Array<ParticipantDetailsDto>;
    /**
     * 
     * @type {Array<ActivityDetailsDto>}
     * @memberof CourseDetailsDto
     */
    activities: Array<ActivityDetailsDto>;
    /**
     * 
     * @type {string}
     * @memberof CourseDetailsDto
     */
    joinUUID: string;
    /**
     * 
     * @type {string}
     * @memberof CourseDetailsDto
     */
    coursePassword?: string;
}

export function CourseDetailsDtoFromJSON(json: any): CourseDetailsDto {
    return CourseDetailsDtoFromJSONTyped(json, false);
}

export function CourseDetailsDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CourseDetailsDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'teacher': UserDetailsDtoFromJSON(json['teacher']),
        'lastActivityTime': (new Date(json['lastActivityTime'])),
        'subject': json['subject'],
        'description': json['description'],
        'students': ((json['students'] as Array<any>).map(ParticipantDetailsDtoFromJSON)),
        'activities': ((json['activities'] as Array<any>).map(ActivityDetailsDtoFromJSON)),
        'joinUUID': json['joinUUID'],
        'coursePassword': !exists(json, 'coursePassword') ? undefined : json['coursePassword'],
    };
}

export function CourseDetailsDtoToJSON(value?: CourseDetailsDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'id': value.id,
        'name': value.name,
        'teacher': UserDetailsDtoToJSON(value.teacher),
        'lastActivityTime': (value.lastActivityTime.toISOString()),
        'subject': value.subject,
        'description': value.description,
        'students': ((value.students as Array<any>).map(ParticipantDetailsDtoToJSON)),
        'activities': ((value.activities as Array<any>).map(ActivityDetailsDtoToJSON)),
        'joinUUID': value.joinUUID,
        'coursePassword': value.coursePassword,
    };
}

